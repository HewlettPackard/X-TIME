[tool.poetry]
name = "xtime-training"
version = "0.1.0"
description = ""
authors = ["Hewlett Packard Labs"]
readme = "README.md"
packages = [{include = "xtime"}]

[tool.poetry.dependencies]
python = "^3.9"
llvmlite = ">0.34.0"        # Without this, in Windows OS poetry selects 0.34 that does not have pre-built packages.
scikit-learn = "1.2.2"      # core dependency
mlflow = "2.2.2"            # core dependency
ray = { version = "2.3.1", extras = ["tune", "default"] }   # core dependency
numpy = "1.23.5"            # core dependency
pandas = "1.5.3"            # core dependency (need to fix the code to work with pandas 2.0.0)
pydantic = "<2"             # indirect dependency (why here: https://github.com/aws/aws-sdk-pandas/issues/2379)
pyaml = "21.10.1"           # core dependency
requests = "2.28.2"         # core dependency
tinydb = "4.7.1"            # core dependency
prettytable = "3.6.0"       # command line interface
coloredlogs = "15.0.1"      # command line interface

# When adding/removing/changing optional dependencies:
#   1. Update README.md file (search for `Extra dependencies`).
#   2. Update `[tool.poetry.extras]` section below.
# Install these dependencies:
#   1. `poetry install --all-extras`  install all extra dependencies.
#   2. `poetry install --extras xgboost`
# If no `--all-extras` / `--extras` provided, the respective installed packages will be uninstalled.
openml = { version = "0.13.1", optional = true }   # Prerequisite dependency for OpenML datasets.
tsfresh = { version = "0.20.2", optional = true }  # Prerequisite dependency for time series data sets.
catboost = { version = "1.1.1", optional = true }  # Gradient boosting trees - CatBoost library.
lightgbm = { version = "3.3.5", optional = true }  # Gradient boosting trees - LightGBM library.
xgboost = { version = "2.0.3", optional = true }   # Gradient boosting trees - XGBoost library.

# RAPIDS (CUDA 12) - not included in `all` extra dependencies, .e.g, use [all,rapids-12]
#   todo: conflicts - latest versions need pandas 2.x
#   todo: conflicts - mlflow 2.2.2 needs pyarrow (>=4.0.0,<12)
# Why this instead of commented below? Answer - https://github.com/rapidsai/cuml/issues/4493
rmm-cu12 = { url = "https://pypi.nvidia.com/rmm-cu12/rmm_cu12-23.8.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", python = "3.9", optional = true}
cudf-cu12 = { url = "https://pypi.nvidia.com/cudf-cu12/cudf_cu12-23.8.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", python = "3.9", optional = true}
dask-cudf-cu12 = { url = "https://pypi.nvidia.com/dask-cudf-cu12/dask_cudf_cu12-23.8.0-py3-none-any.whl", python = "3.9", optional = true}
cuml-cu12 = { url = "https://pypi.nvidia.com/cuml-cu12/cuml_cu12-23.8.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", python = "3.9", optional = true}
raft-dask-cu12 = { url = "https://pypi.nvidia.com/raft-dask-cu12/raft_dask_cu12-23.8.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", python = "3.9", optional = true}
ucx-py-cu12 = { url = "https://pypi.nvidia.com/ucx-py-cu12/ucx_py_cu12-0.33.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", python = "3.9", optional = true}
pylibraft-cu12 = { url = "https://pypi.nvidia.com/pylibraft-cu12/pylibraft_cu12-23.8.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", python = "3.9", optional = true}

# cudf-cu12 = { version = "23.8.0", optional = true,  source="nvidia"}
# cuml-cu12 = { version = "23.8.0", optional = true,  source="nvidia"}


[tool.poetry.group.dev.dependencies]
pyre-check = "0.9.19"          # Type checking tool (`pyre --search-path $(python -c 'import site; print(site.getsitepackages()[0])') check`)
ruff = "0.3.4"                 # Replace black, isort, flake with `ruff check [--fix]` and `ruff format`
pytest = "8.0.0"               # Running unit tests (`pytest ./tests` instead of `python -m unittest`)
pytest-xdist = "3.5.0"         # Parallel `pytest` (`python -m pytest -n auto ./tests`)

[tool.poetry.group.eda.dependencies]
jupyter = "1.0.0"
pandasgui = "0.2.14"           # FIXME: This does not work in Jupyter notebooks on Linux headless systems.
PyQt5 = "5.15.2"               # Fixes "inable to find installation candidates for pyqt5-qt5 (x.x.x)" in Ubuntu

[tool.poetry.extras]
openml = ["openml"]
timeseries = ["tsfresh"]

catboost = ["catboost"]
lightgbm = ["lightgbm"]
xgboost = ["xgboost"]

datasets = ["openml", "tsfresh"]
models = ["catboost", "lightgbm", "xgboost"]

rapids-12 = ["rmm-cu12", "cudf-cu12", "dask-cudf-cu12", "cuml-cu12", "raft-dask-cu12", "ucx-py-cu12", "pylibraft-cu12"]

all = ["openml", "tsfresh", "catboost", "lightgbm", "xgboost"]


# [[tool.poetry.source]]
# name = "nvidia"
# url = "https://pypi.nvidia.com"
# priority = "explicit"


[tool.ruff]
line-length = 120
indent-width = 4
target-version = 'py39'
extend-include = ["*.ipynb"]


[tool.ruff.format]
indent-style = "space"


[tool.ruff.lint]
extend-select = ["I"]  # I - isort


[tool.pytest.ini_options]
markers = [
    "datasets: marks tests as ML datasets unit tests (deselect with '-m \"not datasets\"')",
    "estimators: marks tests as ML models unit tests (deselect with '-m \"not models\"')",
    "cli: marks tests as Command Line Interface (CLI) unit tests (deselect with '-m \"not cli\"')"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
